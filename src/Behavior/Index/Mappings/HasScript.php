<?php
declare(strict_types=1);

namespace Esindex\Behavior\Index\Mappings;

use Esindex\Attribute\ArrayableFieldOption;
use Esindex\Attribute\EnumFieldOption;
use Esindex\Enums\Index\Mappings\OnScriptErrorEnum;
use Esindex\Index\Mappings\Unit\ScriptUnit;

/**
 * @link https://www.elastic.co/guide/en/elasticsearch/reference/8.18/runtime-mapping-fields.html
 */
trait HasScript
{
    /**
     * If this parameter is set, then the field will index values generated by this script,
     * rather than reading the values directly from the source. If a value is set for this field on the input document,
     * then the document will be rejected with an error. Scripts are in the same format as their runtime equivalent.
     */
    private ?ScriptUnit $optScript = null;

    /**
     * Defines what to do if the script defined by the script parameter throws an error at indexing time.
     * Accepts fail (default), which will cause the entire document to be rejected, and continue,
     * which will register the field in the documentâ€™s _ignored metadata field and continue indexing.
     * This parameter can only be set if the script field is also set.
     */
    private ?OnScriptErrorEnum $optOnScriptError = null;

    #[ArrayableFieldOption('script')]
    public function getScript(): ?ScriptUnit
    {
        return $this->optScript;
    }

    public function setScript(?ScriptUnit $value): self
    {
        $this->optScript = $value;
        return $this;
    }

    #[EnumFieldOption('on_script_error')]
    public function getOnScriptError(): ?OnScriptErrorEnum
    {
        return $this->optOnScriptError;
    }

    public function setOnScriptError(?OnScriptErrorEnum $value): self
    {
        $this->optOnScriptError = $value;
        return $this;
    }
}
